return false
file_path
true_length = self.questions.pluck(:pages).sum
p_length = PDFShaver::Document.new(file_path).length
c
self.questions
self.test_papers.file.path
self.test_papers.file
self.test_papers
self.file
self
c
@exam.errors.messages
@exam.errors
errors
error
flash
c
:errors
:error
flash
Errors
errors
error
c
f=PDFShaver::Document.new(self.file.file).length
f=PDFShaver::Document.new(self.file.file)
f=PDFShaver::Document.new(self.file)
self.file
self
self.model.questions.pluck(:pages).sum
self.model.questions.pluck(:pages)
self.model.questions
self.model.course.pages
self.model.course
self.model
self
self.exam
self.course
self.file
self.test_papers
self
file
c
@exam.update(upload_test_paper_params)
c
course.students.count
exam.test_givers.count
exam.test_givers
c
@exam.attendance_sheet.url
@exam.attendance_sheet.path
@exam.attendance_sheet
@exam
@exam.update(upload_student_attendance_sheet_params)
@exam
upload_student_attendance_sheet_params
upload_student_attendance_sheet_PRAMS
upload_student_attendance_sheet
quit
p.render(dir)
dir=File.join(dir, '1.jpg')
File.join(dir, '1.jpg')
Dir.join(dir, '1.jpg')
dir
p.render(dir)
p.render('.')
p=portrait_pages[0]
portrait_pages[0]
portrait_pages
portrait_page
portrait_pages = document.pages.select{|page| true}
portrait_pages = document.pages.select{|page|}
portrait_pages = document.pages.select
portrait_pages = document.pages.select.all
portrait_pages = document.pages
portrait_pages = document.pages.select
no_of_ques
no_of_questions
no_of_students
portrait_pages = document.pages.select{ |page| page.aspect > 1 }
portrait_pages = document.pages.select{ |page| page.aspect }
portrait_pages = document.pages.select{ |page| page.aspect < 1 }
document
portrait_pages
c
run
n
File.dirname(doc.file.path)
File.dirname(doc)
exit
next
student[:email]
student[:eamil]
student.email
student.eamil
student
